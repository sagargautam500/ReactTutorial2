// ‚úÖ Example: Auto Counter with Cleanup (setInterval Cleanup)
// üëâ ‡§Ø‡§∏ ‡§â‡§¶‡§æ‡§π‡§∞‡§£‡§Æ‡§æ, ‡§è‡§ï auto-increment counter ‡§õ, ‡§ú‡§∏‡§≤‡•á ‡§π‡§∞ 1 second ‡§Æ‡§æ count ‡§¨‡§¢‡§æ‡§â‡§Å‡§õ‡•§
// üëâ ‡§ú‡§¨ component unmount ‡§π‡•Å‡§®‡•ç‡§õ, clearInterval() ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó ‡§ó‡§∞‡•á‡§∞ interval ‡§π‡§ü‡§æ‡§á‡§®‡•ç‡§õ‡•§
import { useState, useEffect } from "react";

function AutoCounter() {
  const [count, setCount] = useState(0);
  useEffect(() => {
    console.log("Effect Started");
    const interval = setInterval(() => {
      setCount((prevCount) => prevCount + 1);
    }, 1000); // Every 1 sec

    return () => {
      console.log("Effect Cleanup - Interval Cleared");
      clearInterval(interval); // Cleanup interval when component unmounts
    };
  }, []);

  return (
    <div>
      <h2>Auto Counter: {count}</h2>
    </div>
  );
}

export default AutoCounter;
// How It Works?
// ‡§ú‡§¨ component mount ‡§π‡•Å‡§®‡•ç‡§õ, setInterval() start ‡§π‡•Å‡§®‡•ç‡§õ ‡§∞ ‡§π‡§∞ 1 second ‡§Æ‡§æ count ‡§¨‡§¢‡•ç‡§õ‡•§
// ‡§ú‡§¨ component unmount ‡§π‡•Å‡§®‡•ç‡§õ, clearInterval(interval) call ‡§π‡•Å‡§®‡•ç‡§õ, ‡§ú‡§∏‡§≤‡•á interval ‡§∞‡•ã‡§ï‡•ç‡§õ‡•§
// ‡§Ø‡§¶‡§ø clearInterval() ‡§®‡§π‡§ü‡§æ‡§á‡§è‡§Æ‡§æ, memory leak ‡§π‡•Å‡§® ‡§∏‡§ï‡•ç‡§õ‡•§